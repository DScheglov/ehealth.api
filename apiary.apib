FORMAT: 1A
HOST: http://ehealth.nebo15.com/

# eHealth API

This is a API documentation for Ukrainian Health Services government institution back-end, that should provide:

* Master Patients Index (MPI)
* Global Medical Institutions and Doctors Registries
* Partnership Relation Management (PRM) module that describes business relations between this 3 entities.

Project development is fully transparent, you can find it's source code on GitHub:

* [eHealth API and issue tracker](https://github.com/Nebo15/ehealth.api)
* [Master Patient Index](https://github.com/Nebo15/mpi.api)
* [Reference Implementation of Hospital Information System UI](https://github.com/Nebo15/prm.web)
* [Partnership Relation Management](https://github.com/Nebo15/prm.api)

This API design in based on [Nebo #15 API Design Manifest](http://docs.apimanifest.apiary.io/).

## Contribution Guidelines

TODO.

## Submitting Issues

To submit issues you should use [Issue Tracking Repo](https://github.com/Nebo15/ehealth.api), issues in all other repositories are used to plan backlog and non-related issued will be closed.

# Group Authorization Provider

For security purposes eHealth doesn't allow proxying passwords or to perform any sort back-end authorization. You should always redirect your customers (eg. doctors, we call them "consumers") to the Login UI.

After obtaining `access_token` all subsequent requests should be made with `Authorization: Bearer base64(access_token:)` header.

## Login UI [/oauth]

### Show Login UI [GET /oauth/ui{?client_id,redirect_url,scope,response_type}]

Responsive login page will be rendered.

Page can have different structure based on what kind of scopes do you request.

For security purposes, we will set `X-Frame-Options: deny` header that will disallow opening this page in an iframe.

+ Parameters
    + client_id: `msp-001` (string, required) - Medical Service Provider ID issued upon integration request. Used to identify application developer.
    + redirect_url: http://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.
    + response_type: code (enum, required) - Response type, only `code` is supported.

+ Response 200 (text/html; charset=UTF-8)

    + Headers

            X-CSRF-Token: my-csrf-token

## oAuth Codes [/oauth/codes]

### Issues oAuth code grant [POST /oauth/codes]

This method is only for internal use of Login UI.

+ Request (application/json)

    + Headers

            X-CSRF-Token: `my-csrf-token`

    + Attributes (object)
        + client_id: `msp-001` (string, required) - Medical Service Provider ID issued upon integration request. Used to identify application developer.
        + login: gandalf (string, required) - Consumer login.
        + password: secret (string, required) - Consumer password.
        + timestamp: 1489583714 (number, optional) - Timestamp when request was made. If timestamp was made more than 15 minutes ago, corresponding error will be returned. Required only if `signature` is present.
        + signature: signature (string, optional) - `login + bcrypt(password) + timestamp` string signed with a consumer's private key. Required for some scopes.

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + code: 299383828 (string, required) - oAuth code grant

## oAuth Tokens [/oauth/tokens]

### Exchange oAuth code grant to access token [POST]

+ Request (application/json)

    + Headers

            X-CSRF-Token: my-csrf-token

    + Attributes (object)
        + client_id: `msp-001` (string, required) - Medical Service Provider ID issued upon integration request. Used to identify application developer.
        + client_secret: `msp-001-secret-key` (string, required) - Medical Service Provider secret key issued upon integration request. Used to identify application developer.
        + code: 299383828 (string, required) - oAuth code grant.
        + `grant_type`: authorization_code (string, fixed) - oAuth Grant Type. Currently only `authorization_code` is supported.

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (Access_Token)

### Get oAuth token information [GET /oauth/tokens/{access_token}]

This method can be only called from eHealth gateway.

+ Parameters
    + access_token: `my-oauth-token` (string, required) - oAuth access token.

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Access_Token)


# Group Master Patients Index

## Persons [/persons]

To make sure that records will be de-duplicated, please make sure to send search request before creating a new record.

### Check that Patient exists by ID [HEAD /persons/{id}]

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`Person_Short`)

### Get Patient by ID [GET /persons/{id}]

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`Person_Full`)


### Create Patient [POST]

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

    + Attributes (Person)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Person_Full`)

### Update Patient [PUT /persons/{id}]

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

    + Attributes (Person)
        + is_active: true (boolean, required)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`Person_Full`)


### Search for a Patient [GET /persons{?first_name,last_name,second_name,birth_date,tax_id,phone_number,birth_place}]

This method allows to search for a Person without disclosing personal data:
1. If you match single result, it will contain `person_id` of a record you were looking for.
2. If you match up to 15 results, it will contain list of possible filters that may be applied to reduce number of matches (they may include random data).
3. If result contains more than 15 results - you will receive 403 error.

+ Parameters
    + first_name: Петро (string, required)
    + last_name: Іванов (string, required)
    + second_name: Миколайович (string, optional)
    + birth_date: `1991-08-19T00:00:00.000Z` (string, required) - ISO Datetime.
    + tax_id: 3126509816 (string, optional)
    + phone_number: `+380508887700` (string, optional)
    + birth_place: Конотоп (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Person_Short`])

+ Response 403 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta, fixed-type)
            + code: 403 (number)
        + error (Response__Error, fixed-type)
            + type: `too_many_results`
            + message: `This API method returns only exact match results, please retry with more specific search result` (string)

## Confident Persons [/persons/{id}/confident_persons]

### Add Confidant Person [POST /persons/{id}/confident_persons]

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Person ID

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

    + Attributes (object)
        + person_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Confident Person ID

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (Person_Full)

### Remove Confident Person [DELETE /persons/{id}/confident_persons/{confident_person_id}]

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Person ID
    + confident_person_id: `d290f1ee-6c54-4b01-90e6-d701748f0852` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Person_Full)

# Group Partnership Relations Management

## Doctors [/doctors]

### Create new employee [POST]

Register new employee record for the existing user.


Limitations:
* only one doctor can be registered for one MPI

+ Request (application/json)
    + Attributes (Doctor)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (Doctor_Full)

### Get Doctor by ID [GET /doctors/{id}]

This method allows to fetch doctor record details by ID. Only record where "is_active=true" should be returned.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Doctor_Full)

### Update Doctor [PUT /doctors/{id}]

This method to update the Doctor related information.
Personal information cannot be updated using this method.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ
    + Attributes (Doctor_Update)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Doctor)

### Search for a Doctor [GET /doctors{?first_name,last_name,second_name,speciality,region,area,msp_id,is_active,offset,limit}]

Methods returns list of doctors.
at least one parameter has to be passed. Othervise - error. Only records where is_active=true should be returned.
Purpose: for future to get dictionary of doctors for the patients.

+ Parameters
    + first_name: Петро (string, optional)
    + last_name: Іванов (string, optional)
    + second_name: Миколайович (string, optional)
    + speciality: терапевт (string, optional)
    + region: Київ (string, optional)
    + area: `Дарницький район` (string, optional)
    + msp_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
    + is_active: true (boolean, optional) - Search only for active or disabled doctors.
    + offset: 0 (number, optional)
    + limit: 100 (number, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[Doctor_Full])

## Declarations [/declarations]

### Create Declaration [POST]

Method to register new declaration record

+ Request (application/json)
    + Attributes (Declaration)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include `Declaration`
            + active: false (boolean, required)
            + status: pending_signature (string, required)

### Sign a Declaration [PUT /declarations/{id}]

Method to sign declaration record with the doctor's signature

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)
    + Attributes (object)
        + signed_at: `2017-02-28` (string, required)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include Declaration
            + active: true (boolean, required)
            + status: signed (string, required)

### Get Declaration [GET /declarations/{id}]

Methods returns declaration details by declaration ID or by mpi_id (if parameter id=mpi has been passed).

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Declaration_Full)

### Search Declarations [GET /declarations{?person_id,doctor_id,msp_id,is_active,offset,limit}]

Methods returns list of declarations by combination of patient_id, doctor_id, msp_id.

Response will contain only records that you have access to.

+ Parameters
    + person_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MPI ID of a patient.
    + doctor_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MPI ID of a doctor.
    + msp_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MSP ID.
    + is_active: true (boolean, optional) - Search only for active or disabled declarations.
    + offset: 0 (number, optional)
    + limit: 100 (number, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[Declaration_Full])

## Employees [/employees]

### Create new employee [POST]

Method to create new employee record for the MSP.
`user_id` and msp_id should already exist.

+ Request (application/json)
    + Attributes (Employee)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include `Employee`

### Update employee [PUT /employees/{id}]

This method to update the employee info by ID.

TODO: add verification logic. For ex. how and when is_active can be updated.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)


+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

    + Attributes (object)
        + title: лікар (string, required)
        + speciality: Педіатрія (enum) (string, required)
        + start_date: 2017-02-28 (string, required)
        + expiry_date: 2017-02-28 (string, optional)
        + is_active: true (boolean, required)
        + status: approved (enum, required)
        + creator_signature: MIIGlQYJKoZIhvcNAQcDoIIGhjCCBoICAQAxggEEMIIBAAIBADCBqTCBmzELMAkG (string, required)
        + employee_signature: MIIGlQYJKoZIhvcNAQcDoIIGhjCCBoICAQAxggEEMIIBAAIBADCBqTCBmzELMAkG (string, required)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + Include `Employee`
            + created_at: `2017-03-02T10:45:16.000Z` (string, optional)
            + modified_at: `2017-03-02T10:45:16.000Z` (string, optional)

### Search for an Employee [GET /employees{?user_id,msp_id,employee_type,is_active,status,offset,limit}]

Methods returns list of labour_contracts by doctor_id or msp_id or both.

+ Parameters
    + `user_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - user_id of a doctor.
    + msp_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MSP ID.
    + employee_type: doctor (enum)
        - doctor
        - hr
        - admin
        - owner
    + is_active: true (boolean, required)
    + status: approved (enum)
        - approved
        - pending_approval
        - closed
    + offset: 0 (number, optional)
    + limit: 100 (number, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[Employee_Full])

### Get Employee details [GET /employees/{id}]

Methods returns employee details by ID.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Employee_Full)


## Medical Service Providers [/medical_service_providers]

TBD...

### Register Medical Service Provider [POST]

+ Request (application/json)
    + Attributes (Medical_Service_Provider)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (Medical_Service_Provider)
            + id: blahblah

### Get Medical Service Provider by ID [GET /medical_service_providers/{id}]

This method allows to fetch MSP record details by ID

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (MSP_Response)
            + id: blahblah

### Search for Medical Service Provider [GET /medical_service_providers{?edrpou,name,type,offset,limit}]

This method allows to fetch list of similar MSP by edrpou or name.
Result will be ordered by search result relevance.

+ Parameters
    + edrpou: 432234432 (number, optional)
    + name: Борис (number, optional)
    + type: private_hospital (number, optional)
    + offset: 0 (number, optional)
    + limit: 100 (number, optional)

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[MSP_Response])

# Group Reports

## Declarations [/reports/declarations]

### Get Declarations Histogram stats [GET /reports/declarations{?start_date,end_date,doctor_id,msp_id}]

Methods returns agregated numbers of declarations.

+ Parameters
    + start_date: 2017-01-28 (string, required)
    + end_date: 2017-02-28 (string, required)
    + doctor_id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, optional)
    + msp_id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (array [Declaration_Report])

# Group Medical Service Provider Integration Layer

## OAuth [/mis/oauth]

### Show Login UI [GET /oauth/ui{?client_id,redirect_url,scope,response_type}]

Responsive login page will be rendered.

Page can have different structure based on what kind of scopes do you request.

For security purposes, we will set `X-Frame-Options: deny` header that will disallow opening this page in an iframe.

+ Parameters
    + client_id: `msp-001` (string, required) - Medical Service Provider ID issued upon integration request. Used to identify application developer.
    + redirect_url: http://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.
    + response_type: code (enum, required) - Response type, only `code` is supported.

+ Response 200 (text/html; charset=UTF-8)

    + Headers

            X-CSRF-Token: my-csrf-token


# Group Employees (Doctors, HRs, Accountants)

## Search for Employees [GET /legal_entities/{legal_entity_id}/employees]

+ Parameters
    + legal_entity_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (uuid, required) - the id of the employer legal entity

+ Request (application/json)

    + Headers

        Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Employee_Short`])

## Get Employee details [GET /legal_entities/{legal_entity_id}/employees/{employee_id}]

+ Parameters
    + legal_entity_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (uuid, required) - the id of the employer legal entity
    + employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (uuid, required) - the id of the employee

+ Request (application/json)

    + Headers

        Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Employee_Details)

## Declaration requests [/mis/declaration_requests]

### Get Declaration Requests list [GET /mis/declaration_requests{?employee_id,msp_id,status,offset,limit}]

+ Parameters
    + `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - user_id of a doctor.
    + msp_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MSP ID.
    + status: new (enum, optional)
        - new
        - pending
    + offset: 0 (number, optional)
    + limit: 100 (number, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Declaration_Request_Short`])

### Get Declaration Request Details [GET /mis/declaration_requests/{request_id}]

+ Parameters
    + `request_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)
            + include `Declaration_Request_Details_Public`
            + plaintext_content: `Declaration content` (string, required)
            + active: false (boolean, required)
            + status: pending_verification (string, required)

### Create Declaration Request [POST]

Method to register new declaration

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (Declaration_Request_Public)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + request_id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)
            + include `Declaration_Request_Public`
            + plaintext_content: `Declaration content` (string, required)
            + authentication_method (`Authentication_method`)

### Approve Declaration Request [POST /mis/declaration_requests/{request_id}/actions/approve]

Method to approve new declaration

+ Parameters
    + request_id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + verification_code: 354276 (string, required)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)
            + include `Declaration_Request_Public`
            + plaintext_content: `Declaration content` (string, required)
            + active: false (boolean, required)
            + status: pending_verification (string, required)

### Sign Declaration request [POST /mis/declaration_requests/{request_id}/actions/sign]

Method to verify new declaration
This method receives signed message including signed content, digital signature signer public key
Message contains JSON object with structured data and printout template

```
{
   "id":"b075f148",
   "start_date":"2017-03-02T10:45:16.000Z",
   "end_date":"2017-03-02T10:45:16.000Z",
   "person":{
      "first_name":"Петро",
      "last_name":"Іванов",
      "second_name":"Миколайович",
      "birth_date":"1991-08-19T00:00:00.000Z",
      "birth_place":"Вінниця, Україна",
      "gender":"MALE",
      "email":"email@example.com",
      "tax_id":"3126509816",
      "national_id":"CC7150985243",
      "secret":"secret",
      "documents":[
         {
            "type":"PASSPORT",
            "number":"120518",
            "issue_date":"2015-04-07T00:00:00.000Z",
            "expiry_date":"2015-04-07T00:00:00.000Z",
            "issued_by":"DMSU"
         }
      ],
      "addresses":[
         {
            "type":"RESIDENCE",
            "country":"UA",
            "area":"Житомирська",
            "region":"Бердичівський",
            "city":"Київ",
            "city_type":"CITY",
            "street":"вул. Ніжинська",
            "building":"15",
            "apartment":"23",
            "zip":"02090"
         }
      ],
      "phones":[
         {
            "type":"MOBILE",
            "number":"+380503410870"
         }
      ],
      "authentication_methods":[
         {
            "type":"SMS",
            "phone_number":"+380508887700"
         }
      ],
      "emergency_contact":{
         "first_name":"Петро",
         "last_name":"Іванов",
         "second_name":"Миколайович",
         "phones":[
            {
               "type":"MOBILE",
               "number":"+380503410870"
            }
         ]
      },
      "confidant_person":{
         "relation_type":"trustee",
         "first_name":"Петро",
         "last_name":"Іванов",
         "second_name":"Миколайович",
         "birth_date":"1991-08-19T00:00:00.000Z",
         "birth_place":"Вінниця, Україна",
         "gender":"MALE",
         "tax_id":"3126509816",
         "documents":[
            {
               "type":"PASSPORT",
               "number":"120518",
               "issue_date":"2015-04-07T00:00:00.000Z",
               "expiry_date":"2015-04-07T00:00:00.000Z",
               "issued_by":"DMSU"
            }
         ],
         "phones":[
            {
               "type":"MOBILE",
               "number":"+380503410870"
            }
         ]
      },
      "renewal_consent":true,
      "patient_signed":true,
      "disclosure_consent":true,
      "process_data_consent":true
   },
   "employee":{
      "id":"d290f1ee-6c54-4b01-90e6-d701748f0851",
      "title":"лікар",
      "party":{
         "id":"b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
         "first_name":"Петро",
         "last_name":"Іванов",
         "second_name":"Миколайович",
         "email":"email@example.com",
         "phones":[
            {
               "type":"MOBILE",
               "number":"+380503410870"
            }
         ]
      }
   },
   "msp":{
      "name":"Клініка Борис",
      "short_Name":"Борис",
      "type":"ФОП",
      "edrpou":"5432345432",
      "services":[
         {
            "id":"",
            "name":""
         }
      ],
      "licenses":[
         {
            "license_number":"fd123443",
            "kved":[

            ],
            "issued_by":"Кваліфікацйна комісія",
            "issued_date":"2017",
            "expiry_date":"2017"
         }
      ],
      "accreditation":[
         {
            "certificate_number":"fd123443",
            "issued_by":"Кваліфікацйна комісія",
            "issued_date":"2017",
            "expiry_date":"2017"
         }
      ],
      "addresses":[
         {
            "type":"RESIDENCE",
            "country":"UA",
            "area":"Житомирська",
            "region":"Бердичівський",
            "city":"Київ",
            "city_type":"CITY",
            "street":"вул. Ніжинська",
            "building":"15",
            "apartment":"23",
            "zip":"02090"
         }
      ],
      "phones":[
         {
            "type":"MOBILE",
            "number":"+380503410870"
         }
      ],
      "email":"email@example.com",
      "id":"d290f1ee-6c54-4b01-90e6-d701748f0851"
   },
   "scope":"family doctor",
   "plaintext_content":"Declaration content"
}
```

+ Parameters
    + request_id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)

+ Request (application/pkcs7-mime)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Body

            MIIWmAYJKoZIhvcNAQcCoIIWiTCCFoUCAQExCzAJBgUrDgMCGgUAMIISuwYJKoZI
            hvcNAQcBoIISrASCEqh7XHJ0ZjFcYW5zaVxhbnNpY3BnMTI1Mlxjb2NvYXJ0ZjE1
            MDRcY29jb2FzdWJydGY4MTANCntcZm9udHRibFxmMFxmc3dpc3NcZmNoYXJzZXQw
            IEhlbHZldGljYTt9DQp7XGNvbG9ydGJsO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1
            NTtccmVkNzBcZ3JlZW41M1xibHVlOTY7XHJlZDI0OVxncmVlbjI0OVxibHVlMjUx
            O30NCntcKlxleHBhbmRlZGNvbG9ydGJsOztcY3NzcmdiXGMzNDUxMFxjMjc4NDNc
            YzQ1MDk4O1xjc3NyZ2JcYzk4MDM5XGM5ODAzOVxjOTg4MjQ7fQ0KXG1hcmdsMTQ0
            MFxtYXJncjE0NDBcdmlld3cxMDgwMFx2aWV3aDg0MDBcdmlld2tpbmQwDQpcZGVm
            dGFiNzIwDQpccGFyZFxwYXJkZWZ0YWI3MjBccGFydGlnaHRlbmZhY3RvcjANCg0K
            XGYwXGZzMjggXGNmMiBcY2IzIFxleHBuZDBcZXhwbmR0dzBca2VybmluZzANClx7
            XA0KICAgImlkIjoiYjA3NWYxNDgiLFwNCiAgICJzdGFydF9kYXRlIjoiMjAxNy0w
            My0wMlQxMDo0NToxNi4wMDBaIixcDQogICAiZW5kX2RhdGUiOiIyMDE3LTAzLTAy
            VDEwOjQ1OjE2LjAwMFoiLFwNCiAgICJwZXJzb24iOlx7XA0KICAgICAgImZpcnN0
            X25hbWUiOiJcdWMwXHUxMDU1IFx1MTA3NyBcdTEwOTAgXHUxMDg4IFx1MTA4NiAi
            LFwNCiAgICAgICJsYXN0X25hbWUiOiJcdWMwXHUxMDMwIFx1MTA3NCBcdTEwNzIg
            XHUxMDg1IFx1MTA4NiBcdTEwNzQgIixcDQogICAgICAic2blic Vjb25kX25hbWUiOiJc
            dWMwXHUxMDUyIFx1MTA4MCBcdTEwODIgXHUxMDg2IFx1MTA4MyBcdTEwNzIgXHUx
            MDgxIFx1MTA4NiBcdTEwNzQgXHUxMDgwIFx1MTA5NSAiLFwNCiAgICAgICJiaXJ0
            aF9kYXRlIjoiMTk5MS0wOC0xOVQwMDowMDowMC4wMDBaIixcDQogICAgICAiYmly
            dGhfcGxhY2UiOiJcdWMwXHUxMDQyIFx1MTExMCBcdTEwODUgXHUxMDg1IFx1MTA4
            MCBcdTEwOTQgXHUxMTAzICwgXHUxMDU5IFx1MTA4MiBcdTEwODggXHUxMDcyIFx1
            MTExMSBcdTEwODUgXHUxMDcyICIsXA0KICAgICAgImdlbmRlciI6Ik1BTEUiLFwN
            CiAgICAgICJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIixcDQogICAgICAidGF4
            X2lkIjoiMzEyNjUwOTgxNiIsXA0KICAgICAgIm5hdGlvbmFsX2lkIjoiQ0M3MTUw
            OTg1MjQzIixcDQogICAgICAic2VjcmV0Ijoic2VjcmV0IixcDQogICAgICAiZG9j
            dW1lbnRzIjpbXA0KICAgICAgICAgXHtcDQogICAgICAgICAgICAidHlwZSI6IlBB
            U1NQT1JUIixcDQogICAgICAgICAgICAibnVtYmVyIjoiMTIwNTE4IixcDQogICAg
            ICAgICAgICAiaXNzdWVfZGF0ZSI6IjIwMTUtMDQtMDdUMDA6MDA6MDAuMDAwWiIs
            XA0KICAgICAgICAgICAgImV4cGlyeV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDow
            MC4wMDBaIixcDQogICAgICAgICAgICAiaXNzdWVkX2J5IjoiRE1TVSJcDQogICAg
            ICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImFkZHJlc3NlcyI6W1wNCiAgICAg
            ICAgIFx7XA0KICAgICAgICAgICAgInR5cGUiOiJSRVNJREVOQ0UiLFwNCiAgICAg
            ICAgICAgICJjb3VudHJ5IjoiVUEiLFwNCiAgICAgICAgICAgICJhcmVhIjoiXHVj
            MFx1MTA0NiBcdTEwODAgXHUxMDkwIFx1MTA4NiBcdTEwODQgXHUxMDgwIFx1MTA4
            OCBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAi
            cmVnaW9uIjoiXHVjMFx1MTA0MSBcdTEwNzcgXHUxMDg4IFx1MTA3NiBcdTEwODAg
            XHUxMDk1IFx1MTExMCBcdTEwNzQgXHUxMDg5IFx1MTEwMCBcdTEwODIgXHUxMDgw
            IFx1MTA4MSAiLFwNCiAgICAgICAgICAgICJjaXR5IjoiXHVjMFx1MTA1MCBcdTEw
            ODAgXHUxMTExIFx1MTA3NCAiLFwNCiAgICAgICAgICAgICJjaXR5X3R5cGUiOiJD
            SVRZIixcDQogICAgICAgICAgICAic3RyZWV0IjoiXHVjMFx1MTA3NCBcdTEwOTEg
            XHUxMDgzIC4gXHUxMDUzIFx1MTExMCBcdTEwNzggXHUxMDgwIFx1MTA4NSBcdTEw
            ODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAiYnVpbGRp
            bmciOiIxNSIsXA0KICAgICAgICAgICAgImFwYXJ0bWVudCI6IjIzIixcDQogICAg
            ICAgICAgICAiemlwIjoiMDIwOTAiXA0KICAgICAgICAgXH1cDQogICAgICBdLFwN
            CiAgICAgICJwaG9uZXMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0
            eXBlIjoiTU9CSUxFIixcDQogICAgICAgICAgICAibnVtYmVyIjoiKzM4MDUwMzQx
            MDg3MCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImF1dGhlbnRp
            Y2F0aW9uX21ldGhvZHMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0
            eXBlIjoiU01TIixcDQogICAgICAgICAgICAicGhvbmVfbnVtYmVyIjoiKzM4MDUw
            ODg4NzcwMCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImVtZXJn
            ZW5jeV9jb250YWN0Ijpce1wNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1
            MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAi
            bGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEw
            ODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1
            MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEw
            ODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIixcDQogICAgICAgICAicGhvbmVzIjpb
            XA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklM
            RSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0K
            ICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAg
            ImNvbmZpZGFudF9wZXJzb24iOlx7XA0KICAgICAgICAgInJlbGF0aW9uX3R5cGUi
            OiJ0cnVzdGVlIixcDQogICAgICAgICAiZmlyc3RfbmFtZSI6Ilx1YzBcdTEwNTUg
            XHUxMDc3IFx1MTA5MCBcdTEwODggXHUxMDg2ICIsXA0KICAgICAgICAgImxhc3Rf
            bmFtZSI6Ilx1YzBcdTEwMzAgXHUxMDc0IFx1MTA3MiBcdTEwODUgXHUxMDg2IFx1
            MTA3NCAiLFwNCiAgICAgICAgICJzZWNvbmRfbmFtZSI6Ilx1YzBcdTEwNTIgXHUx
            MDgwIFx1MTA4MiBcdTEwODYgXHUxMDgzIFx1MTA3MiBcdTEwODEgXHUxMDg2IFx1
            MTA3NCBcdTEwODAgXHUxMDk1ICIsXA0KICAgICAgICAgImJpcnRoX2RhdGUiOiIx
            OTkxLTA4LTE5VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICJiaXJ0aF9wbGFj
            ZSI6Ilx1YzBcdTEwNDIgXHUxMTEwIFx1MTA4NSBcdTEwODUgXHUxMDgwIFx1MTA5
            NCBcdTExMDMgLCBcdTEwNTkgXHUxMDgyIFx1MTA4OCBcdTEwNzIgXHUxMTExIFx1
            MTA4NSBcdTEwNzIgIixcDQogICAgICAgICAiZ2VuZGVyIjoiTUFMRSIsXA0KICAg
            ICAgICAgInRheF9pZCI6IjMxMjY1MDk4MTYiLFwNCiAgICAgICAgICJkb2N1bWVu
            dHMiOltcDQogICAgICAgICAgICBce1wNCiAgICAgICAgICAgICAgICJ0eXBlIjoi
            UEFTU1BPUlQiLFwNCiAgICAgICAgICAgICAgICJudW1iZXIiOiIxMjA1MTgiLFwN
            CiAgICAgICAgICAgICAgICJpc3N1ZV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDow
            MC4wMDBaIixcDQogICAgICAgICAgICAgICAiZXhwaXJ5X2RhdGUiOiIyMDE1LTA0
            LTA3VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZWRfYnki
            OiJETVNVIlwNCiAgICAgICAgICAgIFx9XA0KICAgICAgICAgXSxcDQogICAgICAg
            ICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAi
            dHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1
            MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAg
            XH0sXA0KICAgICAgInJlbmV3YWxfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicGF0
            aWVudF9zaWduZWQiOnRydWUsXA0KICAgICAgImRpc2Nsb3N1cmVfY29uc2VudCI6
            dHJ1ZSxcDQogICAgICAicHJvY2Vzc19kYXRhX2NvbnNlbnQiOnRydWVcDQogICBc
            fSxcDQogICAiZW1wbG95ZWUiOlx7XA0KICAgICAgImlkIjoiZDI5MGYxZWUtNmM1
            NC00YjAxLTkwZTYtZDcwMTc0OGYwODUxIixcDQogICAgICAidGl0bGUiOiJcdWMw
            XHUxMDgzIFx1MTExMCBcdTEwODIgXHUxMDcyIFx1MTA4OCAiLFwNCiAgICAgICJw
            YXJ0eSI6XHtcDQogICAgICAgICAiaWQiOiJiMDc1ZjE0OC03ZjkzLTRmYzItYjJl
            Yy0yZDgxYjE5YTliN2IiLFwNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1
            MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAi
            bGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEw
            ODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1
            MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEw
            ODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIlwNCiAgICAgIFx9XA0KICAgXH0sXA0K
            ICAgIm1zcCI6XHtcDQogICAgICAiaWQiOiJkMjkwZjFlZSIsXA0KICAgICAgIm5h
            bWUiOiJcdWMwXHUxMDUwIFx1MTA4MyBcdTExMTAgXHUxMDg1IFx1MTExMCBcdTEw
            ODIgXHUxMDcyICBcdTEwNDEgXHUxMDg2IFx1MTA4OCBcdTEwODAgXHUxMDg5ICIs
            XA0KICAgICAgInNob3J0X05hbWUiOiJcdWMwXHUxMDQxIFx1MTA4NiBcdTEwODgg
            XHUxMDgwIFx1MTA4OSAiLFwNCiAgICAgICJ0eXBlIjoiXHVjMFx1MTA2MCBcdTEw
            NTQgXHUxMDU1ICIsXA0KICAgICAgImVkcnBvdSI6IjU0MzIzNDU0MzIiXA0KICAg
            XH0sXA0KICAgInNjb3BlIjoiZmFtaWx5IGRvY3RvciIsXA0KICAgInBsYWludGV4
            dF9jb250ZW50IjoiRGVjbGFyYXRpb24gY29udGVudCJcDQpcfX2gggIuMIICKjCC
            AZOgAwIBAgIJANj0sC/v0hWYMA0GCSqGSIb3DQEBBQUAMBkxFzAVBgNVBAMUDlBL
            Q1MjNyBleGFtcGxlMB4XDTE3MDMyNzE0NTczM1oXDTE3MDQyNjE0NTczM1owGTEX
            MBUGA1UEAxQOUEtDUyM3IGV4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ
            AoGBAMuqrxE/0txT+ZVRKU1O85a8eaaUAOkbcAIy1mMoxQ+UBwcBeXt07Oxu32+p
            51HSY93Pp5AlDLKE48sjSNvMbTk5vtZ6g8sqMpZxlBVqHLkXLXYBMf2rmtE4hfV6
            yTP5YUJEs+a9cotsPN0r5KlI9g8aSpIj9Ie8mML5Vh1taQHNAgMBAAGjejB4MB0G
            A1UdDgQWBBTET2SwL5UfUMKDyhuBGCA+CaflnzBJBgNVHSMEQjBAgBTET2SwL5Uf
            UMKDyhuBGCA+Cafln6EdpBswGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGWCCQDY
            9LAv79IVmDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAF1uOGjUb6IV
            S28UqZ2qLc/kd2oNU2hOEuAp1YeaKRL2OaG4bTubJO1ejoxCJNfVj0FFw5PXIgjn
            w87JzkAy5KLDTiotQl8eknkd1bR3nIWINemck3GeGYkR8giG3gkNxz6ky1+63Zco
            JkEiS46aneDhmS6BdH0V2G/3delos8+ZMYIBgDCCAXwCAQEwJjAZMRcwFQYDVQQD
            FA5QS0NTIzcgZXhhbXBsZQIJANj0sC/v0hWYMAkGBSsOAwIaBQCggbEwGAYJKoZI
            hvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwMzI4MTE1NDEw
            WjAjBgkqhkiG9w0BCQQxFgQU5NSvVRVYHz5tG1GW8gXrjHSnLj8wUgYJKoZIhvcN
            AQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwIC
            AUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEgYCdqnN8
            gGXw9OUmtxOvQQgHK5Ni/4/2WQWj7rxERh5AI6rhXs/hh3DNS5Z5mN6wO8z47SQu
            edbsMQ5hf6+9BbKhXD7WKeU+DtGyfa1ner5/ubz6BeVvuT98D4PrzHlqNSpe/7Ai
            rrA70QVO9kPoFSmGtBG6JjaqaCZBYbvF9InPRw==

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)
            + include `Declaration_Request_Public`
            + active: true (boolean, required)
            + status: active (string, required)

### Upload files [POST /mis/declaration_requests/{request_id}/files/{filename}]

Uload files for offline patient verification

+ Parameters
    + request_id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)
    + filename: SzFxGfAg_Zj.pdf

+ Request (application/pdf)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            Content-Length: 150
            Content-Range: bytes
    + Body

            PDF CONTENT

+ Response 200 (application/json)
    + Attributes (Response_OK)

## Employees [/mis/employees]

### Register new employee [POST]
Method to create new employee

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (Employee_Request)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include `Employee_Request`

### Get employee details [GET /mis/employees/{id}]

+ Parameters
    + id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include `Employee_Request`

### Approve employee [PUT /mis/employees/{id}/actions/approve]

This method to approve employee creation request. Should be used by the employee user.


+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)


+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (Registration_Request)
        + verification_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (object)
            + Include `Employee_Full`
            + created_at: `2017-03-02T10:45:16.000Z` (string, optional)
            + modified_at: `2017-03-02T10:45:16.000Z` (string, optional)

### Get list of Employees [GET /employees{?user_id,legal_entity_id,division_id,employee_type,is_active,status,offset,limit}]

Methods returns list of employees by msp_id or user_id or both.
User_id or msp_id has to be passed.

+ Parameters
    + `user_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - user_id of a doctor.
    + legal_entity_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MSP ID.
    + division_id: `c4361142-b3b9-457e-9ec7-f01080f5e1cc` (string, optional) - division ID
    + employee_type: doctor (enum, required)
        - doctor
        - hr
        - admin
        - owner
    + is_active: true (boolean, optional)
    + status: approved (enum, optional)
        - approved
        - pending_approval
        - closed
    + offset: 0 (number, optional)
    + limit: 100 (number, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[Employee_Short])

## Persons [/mis/persons]

### Search for a Person [GET /mis/persons{?first_name,last_name,second_name,birth_date,tax_id,phone_number,birth_place,offset,limit}]

This method allows to search for a Person without disclosing personal data:

+ Parameters
    + first_name: Петро (string, required)
    + last_name: Іванов (string, required)
    + second_name: Миколайович (string, optional)
    + birth_date: `1991-08-19T00:00:00.000Z` (string, required) - ISO Datetime.
    + tax_id: 3126509816 (string, optional)
    + phone_number: `+380508887700` (string, optional)
    + offset: 0 (number, optional)
    + limit: 100 (number, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Person_Short`])

+ Response 403 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta, fixed-type)
            + code: 403 (number)
        + error (Response__Error, fixed-type)
            + type: `too_many_results`
            + message: `This API method returns only exact match results, please retry with more specific search result` (string)

### Get Person Declarations [GET /mis/persons/{id}/declarations{?offset,limit}]

This method allows to receive person declarations only referenced to current msp_id (based on access_token)

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + offset: 0 (number, optional)
    + limit: 100 (number, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[Declaration_Details])

+ Response 403 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta, fixed-type)
            + code: 403 (number)
        + error (Response__Error, fixed-type)
            + type: `forbidden`
            + message: `Active declaration belongs to another msp` (string)

## Legal entities [/mis/legal_entities]

### Get legal entities list [GET /mis/legal_entities{?edrpou,type}]

+ Parameters
    + `edrpou`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - user_id of a doctor.
    + type: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MSP ID.

+ Request

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Legal_Entity_Short`])

# Data Structures
## Responses
### `Response_Collection`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (Response__Pagination, fixed-type)

### `Response_OK`
+ meta (Response__Meta, fixed-type)
+ data (object, fixed-type)

### `Response_Error`
+ meta (Response__Meta, fixed-type)
    + code: 400 (number)
+ error (Response__Error, fixed-type)

### `Response__Meta`
+ code: 200 (number) - HTTP response code.
+ url: http://example.com/resource (string) - URL to requested resource.
+ type (enum) - Type of data that is located in `data` attribute.
    - object (string) - `data` attribute is a JSON object.
    - list (string) - `data` attribute is a list.
+ code: 200 (number) - HTTP response code.
+ `idempotency_key`: `idemp-ssjssdjoa8308u0us0` (string, optional) - [Idempotency key](http://docs.apimanifest.apiary.io/#introduction/optional-features/idempotent-requests). Send it trough `X-Idempotency-Key` header.
+ `request_id`: `req-adasdoijasdojsda` (string) - [Request ID](http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/request-id). Send it with `X-Request-ID` header.

### `Response__Error`
+ type: type_atom (string) - Atom that represents error type.
+ message: Error description (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_DuplicateEntity`
+ type: `object_already_exists` (string) - Atom that represents error type.
+ message: This API already exists (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_ValidationFailed`
+ type: validation_failed (string) - type of an error.
+ message: Validation failed. You can find validators description at our API Manifest: http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors. (string)
+ invalid (array)
    + `entry_type`: `json_data_proprty` (string) - Type of error.
    + entry: $.cvv (string) - JSON Path to an invalid property.
    + rules (array)
        + rule: required (string) - String constant that represents validation rule type. List of all types can be found in [API Manifest](http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors).
        + params (array) - Validation Parameters.

### `Response__Pagination`
+ limit: 20 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50.
+ cursors (object)
    + `starting_after`: 56c31536a60ad644060041af (string) - A cursor for use in pagination. An object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    + `ending_before`: 56c31536a60ad644060041aa (string) - A cursor for use in pagination. An object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
+ size: 1000 (number) - Total number of objects in collection.
+ has_more: false (boolean) - Is this collection have more data to load in the same style as last request loaded it.

## Persons
### `Person`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ birth_place: `Вінниця, Україна` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ email: email@example.com (string, optional)
+ tax_id: 3126509816 (string, optional)
+ national_id: CC7150985243 (string, optional)
+ secret: secret (string, required)
+ documents (array[Document], optional)
+ addresses (array[Address], optional)
+ phones (array[Phone], optional)
+ `authentication_methods` (array[Authentication_method], optional)

### `Confidant_Person`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ birth_place: `Вінниця, Україна` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ tax_id: 3126509816 (string, optional)
+ documents (array[Document], optional)
+ phones (array[Phone], optional)

### `Emergency_Contact`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ phones (array[Phone], optional)

### `Person_Request`
+ include `Person`
+ emergency_contact (object)
    + include `Emergency_Contact`
+ confidant_person (object)
    + relation_type: trustee (enum)
        - trustee
    + include `Confidant_Person`

### `Person_Full`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ Include Person
+ death_date: `2015-04-07T00:00:00.000Z` (string, optional)
+ confident_persons (array[Person])
+ is_active: true (boolean, required)
+ history (array)
    + (object)
        + id: `7bca069f-21e4-4546-90cf-b65e3f39d93d` (string, required)
+ inserted_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ updated_at: `2017-03-02T10:45:16.000Z` (string, optional)

### `Person_Minimal`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)

### `Person_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required) - ISO Datetime.
+ tax_id: 3126509816 (string, optional)
+ phone_number: `+380508887700` (string, optional)
+ birth_place: Вінниця (string, required)
+ history (array)
    + (object)
        + id: `7bca069f-21e4-4546-90cf-b65e3f39d93d` (string, required)

### `Authentication_method`
+ type: SMS, OFFLINE (enum, required)
+ phone_number: `+380508887700` (string, optional)

## Doctors
### Doctor
+ certificates (array[Medical_Certificate], optional)
+ licenses (array[Medical_License], required)
+ education (array[Medical_Education], required)

### `Doctor_Full`
+ include `Doctor`
+ status: PENDING_APPROVAL, APPROVED, DECLINED
+ is_active: true (boolean, required)
+ name: Іванов Іван ванович (string)

### `Doctor_Update`
+ include `Doctor`
+ is_active: true (boolean, optional)
+ status (enum, optional)
    - pending_approval
    - approved
    - declined

## Declarations
### Declaration
+ person_id: "d290f1ee-6c54-4b01-90e6-d701748f0851" (string, required)
+ doctor_id: "d290f1ee-6c54-4b01-90e6-d701748f0851" (string, required)
+ msp_id: "d290f1ee-6c54-4b01-90e6-d701748f0851" (string, required)
+ scope (enum, required)
    - family_doctor

### `Declaration_Request_Public`
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2017-03-02T10:45:16.000Z` (string, required)
+ person(`Person_Request`, required)
    + renewal_consent: true (boolean)
    + patient_signed: true (boolean)
    + disclosure_consent: true (boolean)
    + process_data_consent: true (boolean)
+ `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ msp_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ scope (enum, required)
    - family doctor

### `Declaration_Request_Details_Public`
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2017-03-02T10:45:16.000Z` (string, required)
+ person(`Person_Request`, required)
    + renewal_consent: true (boolean)
    + patient_signed: true (boolean)
    + disclosure_consent: true (boolean)
    + process_data_consent: true (boolean)
+ employee (Employee_Minimal)
+ msp(`Medical_Service_Provider`)
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ scope (enum, required)
    - family doctor

### `Declaration_Request`
+ include `Person`
+ person_id: "d290f1ee-6c54-4b01-90e6-d701748f0851" (string, optional)
+ doctor_id: "d290f1ee-6c54-4b01-90e6-d701748f0851" (string, required)
+ msp_id: "d290f1ee-6c54-4b01-90e6-d701748f0851" (string, required)
+ scope (enum, required)
    - family doctor

### `Declaration_Request_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2017-03-02T10:45:16.000Z` (string, required)
+ person (Person_Minimal)
+ employee (Employee_Minimal)
+ msp(`MSP_Short`)

### `Declaration_Request_Full`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2017-03-02T10:45:16.000Z` (string, required)
+ person (Person_Minimal)
+ employee (Employee_Minimal)
+ msp(`MSP_Short`)

### `Declaration_Details`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2017-03-02T10:45:16.000Z` (string, required)
+ person(`Person_Short`)
+ doctor (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + name: `Григорій Квітка Основ'яненко`
+ msp(`MSP_Details`)
+ created_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ modified_at: `2017-03-02T10:45:16.000Z` (string, optional)

### `Declaration_Full`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ Include `Declaration`
+ created_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ modified_at: `2017-03-02T10:45:16.000Z` (string, optional)

### `Declaration_Report`
+ date: `2017-03-02` (string, required)
+ declarations_total: 100 (number, required)
+ declarations_created: 10 (number, required)
+ declarations_closed: 2 (number, required)

## Party
### `Party_Short`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)

### `Party_Request`
+ include `Party_Short`
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ tax_id: 3126509816 (string, optional)
+ national_id: CC7150985243 (string, optional)
+ email: email@example.com (string, optional)
+ documents (array[Document], optional)
+ phones (array[Phone], optional)
+ doctor (DoctorNew, optional)

### `Party_Full`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ include `Party_Short`
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ tax_id: 3126509816 (string, optional)
+ national_id: CC7150985243 (string, optional)
+ email: email@example.com (string, optional)
+ documents (array[Document], optional)
+ phones (array[Phone], optional)

## Employees
### `Employee`
+ user_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ msp_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ employee_type: doctor (enum)
    - doctor
    - hr
    - admin
    - owner
+ title: лікар (string, required)
+ speciality: Педіатрія (enum)
    - Загальна практика - сімейна медицина
    - Педіатрія
    - Підліткова терапія
    - Терапія
+ employee_details (Doctor, optional)
+ start_date: 2017-02-28 (string, required)
+ expiry_date: 2017-02-28 (string, optional)

### `Employee_Minimal`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ title: лікар (string, required)
+ party (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
    + email: email@example.com (string, optional)
    + phones (array[Phone], optional)

### `Employee_Request`
+ legal_entity_id: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ division_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ title: лікар (string, required)
+ speciality: Педіатрія (enum)
    - Загальна практика - сімейна медицина
    - Педіатрія
    - Підліткова терапія
    - Терапія
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ active: true (boolean, required)
+ status: pending_verification (enum, required)
+ employee_type: doctor (enum)
    - doctor
    - hr
    - admin
    - owner
+ party (Party_Request)

### `Employee_Short`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ title: лікар (string, required)
+ speciality: Педіатрія (enum)
    - Загальна практика - сімейна медицина
    - Педіатрія
    - Підліткова терапія
    - Терапія
+ employee_type: doctor (enum)
    - doctor
    - hr
    - admin
    - owner
+ active: true (boolean, required)
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ party (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`

### `Employee_Full`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ Include `Employee`
+ is_active: true (boolean, required)
+ status: approved (enum)
    - approved
    - pending_approval
    - closed
+ created_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ modified_at: `2017-03-02T10:45:16.000Z` (string, optional)

### `Employee_Details`
+ include Employee_Full
+ include user

### `Registration_Request`
+ legal_entity_id: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ title: лікар (string, required)
+ speciality: Педіатрія (enum)
    - Загальна практика - сімейна медицина
    - Педіатрія
    - Підліткова терапія
    - Терапія
+ start_date: `2015-03-02T10:45:16.000Z` (string, required)
+ end_date: `2017-03-02T10:45:16.000Z` (string, optional)
+ employee_type: doctor (enum)
    - doctor
    - hr
    - admin
    - owner
+ employee_details (Doctor, optional)

## Legal entities
### `Legal_Entity_Short`
+ name: Клініка Борис (string, required)
+ short_Name: Борис (string, required)
+ type (enum, required)
    - ФОП
    - Клініка
+ edrpou: 5432345432 (string, required)

## `Medical_Service_Providers`
### `Medical_Service_Provider`
+ name: Клініка Борис (string, required)
+ short_Name: Борис (string, required)
+ type (enum, required)
    - ФОП
    - Клініка
+ edrpou: 5432345432 (string, required)
+ services (array[Medical_Service], required)
+ licenses (array[License], optional)
+ accreditation (array[Accreditation], required)
+ addresses (array[Address], optional)
+ phones (array[Phone], optional)
+ email: `email@example.com` (string, required)

### `MSP_Short`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851
+ name: Клініка Борис (string, required)
+ short_Name: Борис (string, required)
+ type (enum, required)
    - ФОП
    - Клініка
+ edrpou: 5432345432 (string, required)

### `MSP_Details`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851
+ name: Клініка Борис (string, required)
+ short_Name: Борис (string, required)
+ type (enum, required)
    - ФОП
    - Клініка
+ edrpou: 5432345432 (string, required)
+ addresses (array[Address], optional
+ created_at: `2017-02-28T15:12:54.000Z` (string, optional)
+ modified_at: `2017-02-28T15:12:54.000Z` (string, optional)

### `MSP_Response`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851
+ include Medical_Service_Provider
+ created_at: `2017-02-28T15:12:54.000Z` (string, optional)
+ modified_at: `2017-02-28T15:12:54.000Z` (string, optional)

## `Medical_Services`
### `Medical_Service`
+ id
+ name

## `Access_Tokens`
### `Access_Token`
+ access_token: `my-oauth-token` (string, required) - oAuth access token.
+ refresh_token: `my-oauth-refresh-token` (string, required) - oAuth refresh token.
+ expires_in: 76000 (number, required) - seconds until token expiration.
+ person_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Person ID of authorized user.
+ scopes: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - scopes that assigned to access token

## Shared
### `user`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ email: email@example.com (string, required)
+ tax_id: 3126509816 (string, optional)
+ national_id: CC7150985243 (string, optional)
+ documents (array[Document], optional)
+ phones (array[Phone], optional)
+ public_key:FDSAF768ASD6F78A6FD87ADS6FA8DS7F678A678DF (string, required)

### `user_full`
+ include user
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ created_at: `2017-02-28T15:12:54.000Z` (string, optional)
+ modified_at: `2017-02-28T15:12:54.000Z` (string, optional)
+ is_active: true (boolean, required)
+ status: approved (enum)
    - approved
    - pending_approval
    - closed

### Address
+ type: RESIDENCE, REGISTRATION (enum[string], required)
+ country: UA (enum[string], required)
+ area: Житомирська (string, optional)
+ region: Бердичівський (string, optional)
+ city: Київ (string, required)
+ city_type: CITY (enum[string], required)
+ street: `вул. Ніжинська` (string, optional)
+ building: 15 (string, required)
+ apartment: 23 (string, optional)
+ zip: 02090 (string, optional)

### Phone
+ type: MOBILE, LANDLINE (enum[string], required)
+ number: `+380503410870` (string, required)

### Document
+ type: PASSPORT (enum[string], required)
+ number: 120518 (string, required)
+ issue_date: `2015-04-07T00:00:00.000Z`
+ expiry_date: `2015-04-07T00:00:00.000Z`
+ issued_by: DMSU

### `Medical_Certificate`
+ name: Диплом доктора медицини (string, required)
+ number: AA1234BC (string, required)
+ degree: `Doctor of Medicine (MD, Dr.MuD, Dr.Med)` (string, required)
+ issue_date: 2017-02-28 (string, required)
+ issued_by: Національний медичний університет імені О.О. Богомольця (string, required)
+ started_date: 2016-08-29T09:12:33.001Z (string, optional)
+ expiration_date: 2016-08-29T09:12:33.001Z (string, optional)

### `Medical_License`
+ category (enum, required)
    - Атестація на визначення знань і практичних навиків
+ type (enum, required)
    - диплом
+ issued_by: Кваліфікацйна комісія (string, required)
+ order_no: DV4312324 (string, required)
+ issued_date: 2017-02-28 (string, required)
+ expiry_date: 2017-02-28 (string, required)

### `Medical_Education`
+ institution_name: Академія Богомольця (string, required)
+ certificate_Number: DD123543 (string, required)
+ degree (enum, required)
    - Doctor of Medicine
    - Bachelor of Medicine
    - Bachelor of Surgery
    - Doctor of Osteopathic Medicine
    - Master of Clinical Medicine
+ start_date: 2017-02-28 (string, required)
+ finished_date: 2017-02-28 (string, required)
+ speciality (enum, required)
    - Загальна практика - сімейна медицина
    - Педіатрія
    - Підліткова терапія
    - Терапія

### Accreditation
+ certificate_number: fd123443 (string, required)
+ issued_by: Кваліфікацйна комісія (string)
+ issued_date: 2017-02-28 (string, required)
+ expiry_date: 2017-02-28 (string, optional)

### License
+ license_number: fd123443 (string, required)
+ kved (array[string], required)
+ issued_by: Кваліфікацйна комісія (string)
+ issued_date: 2017-02-28 (string, required)
+ expiry_date: 2017-02-28 (string, optional)

## DoctorsNew
### DoctorNew
+ education (array[Education], required)
+ academicDegree (array[AcademicDegree], optional)
+ scienceDegree (array[ScienceDegree], optional)
+ workExperience (array[WorkExperience], optional)
+ qualification (array[Qualification], optional)
+ professionalLevel (array[ProfessionalLevel], optional)

### Education
+ country: UA (enum[string], required)
+ city: Київ (string, required)
+ institution_name: Академія Богомольця (string, required)
+ finished_date: 2017-02-28 (string, required)
+ diploma_number: DD123543 (string, required)
+ degree (enum, required)
    - Молодший спеціаліст
    - Бакалавр
    - Спеціаліст
    - Магістр
+ speciality: Педіатр (string, required)

### AcademicDegree
+ country: UA (enum[string], required)
+ city: Київ (string, required)
+ degree (enum, required)
    - Старший дослідник
    - Доцент
    - Професор
+ institution_name: Академія Богомольця (string, required)
+ certificate_number: DD123543 (string, required)
+ speciality: Педіатр (string, required)
+ issued_date: 2017-02-28 (string, required)

### ScienceDegree
+ country: UA (enum[string], required)
+ city: Київ (string, required)
+ degree (enum, required)
    - Доктор філософії
    - Доктор наук
+ institution_name: Академія Богомольця (string, required)
+ diploma_number: DD123543 (string, required)
+ speciality: Педіатр (string, required)
+ diploma_topic: `Супер педіатр та де його шукати` (string, required)
+ issued_date: 2017-02-28 (string, required)

### WorkExperience
+ country: UA (enum[string], required)
+ city: Київ (string, required)
+ work_place: `Житомирська обласна лікарня` (string, required)
+ work_position: `Директор лікарні` (string, required)
+ start_date: 2017-02-28 (string, required)
+ finish_date: 2018-02-28 (string, required)
+ work_experience: 1 (number, required) - count of work experience years

### Qualification
+ type (enum, required)
    - Інтернатура
    - Спеціалізація
    - Передатестаційний цикл
    - Тематичне вдосконалення
    - Курси інформації
    - Стажування
+ institution_name: Академія Богомольця (string, required)
+ speciality: Педіатр (string, required)
+ issued_date: 2017-02-28 (string, required)

### ProfessionalLevel
+ degree (enum, required)
    - Друга категорія
    - Перша категорія
    - Вища категорія
+ qualification_type (enum, required)
    - Присвоєння
    - Підтвердження
+ institution_name: Академія Богомольця (string, required)
+ issued_date: 2017-02-28 (string, required)
